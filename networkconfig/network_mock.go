// Code generated by MockGen. DO NOT EDIT.
// Source: ./network.go
//
// Generated by this command:
//
//	mockgen -package=networkconfig -destination=./network_mock.go -source=./network.go
//

// Package networkconfig is a generated GoMock package.
package networkconfig

import (
	reflect "reflect"
	time "time"

	spec "github.com/attestantio/go-eth2-client/spec"
	phase0 "github.com/attestantio/go-eth2-client/spec/phase0"
	gomock "go.uber.org/mock/gomock"

	types "github.com/ssvlabs/ssv-spec/types"
)

// MockNetwork is a mock of Network interface.
type MockNetwork struct {
	ctrl     *gomock.Controller
	recorder *MockNetworkMockRecorder
	isgomock struct{}
}

// MockNetworkMockRecorder is the mock recorder for MockNetwork.
type MockNetworkMockRecorder struct {
	mock *MockNetwork
}

// NewMockNetwork creates a new mock instance.
func NewMockNetwork(ctrl *gomock.Controller) *MockNetwork {
	mock := &MockNetwork{ctrl: ctrl}
	mock.recorder = &MockNetworkMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNetwork) EXPECT() *MockNetworkMockRecorder {
	return m.recorder
}

// EpochDuration mocks base method.
func (m *MockNetwork) EpochDuration() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EpochDuration")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// EpochDuration indicates an expected call of EpochDuration.
func (mr *MockNetworkMockRecorder) EpochDuration() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EpochDuration", reflect.TypeOf((*MockNetwork)(nil).EpochDuration))
}

// EpochStartTime mocks base method.
func (m *MockNetwork) EpochStartTime(epoch phase0.Epoch) time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EpochStartTime", epoch)
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// EpochStartTime indicates an expected call of EpochStartTime.
func (mr *MockNetworkMockRecorder) EpochStartTime(epoch any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EpochStartTime", reflect.TypeOf((*MockNetwork)(nil).EpochStartTime), epoch)
}

// EstimatedCurrentEpoch mocks base method.
func (m *MockNetwork) EstimatedCurrentEpoch() phase0.Epoch {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EstimatedCurrentEpoch")
	ret0, _ := ret[0].(phase0.Epoch)
	return ret0
}

// EstimatedCurrentEpoch indicates an expected call of EstimatedCurrentEpoch.
func (mr *MockNetworkMockRecorder) EstimatedCurrentEpoch() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EstimatedCurrentEpoch", reflect.TypeOf((*MockNetwork)(nil).EstimatedCurrentEpoch))
}

// EstimatedCurrentSlot mocks base method.
func (m *MockNetwork) EstimatedCurrentSlot() phase0.Slot {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EstimatedCurrentSlot")
	ret0, _ := ret[0].(phase0.Slot)
	return ret0
}

// EstimatedCurrentSlot indicates an expected call of EstimatedCurrentSlot.
func (mr *MockNetworkMockRecorder) EstimatedCurrentSlot() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EstimatedCurrentSlot", reflect.TypeOf((*MockNetwork)(nil).EstimatedCurrentSlot))
}

// EstimatedEpochAtSlot mocks base method.
func (m *MockNetwork) EstimatedEpochAtSlot(slot phase0.Slot) phase0.Epoch {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EstimatedEpochAtSlot", slot)
	ret0, _ := ret[0].(phase0.Epoch)
	return ret0
}

// EstimatedEpochAtSlot indicates an expected call of EstimatedEpochAtSlot.
func (mr *MockNetworkMockRecorder) EstimatedEpochAtSlot(slot any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EstimatedEpochAtSlot", reflect.TypeOf((*MockNetwork)(nil).EstimatedEpochAtSlot), slot)
}

// EstimatedSlotAtTime mocks base method.
func (m *MockNetwork) EstimatedSlotAtTime(arg0 time.Time) phase0.Slot {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EstimatedSlotAtTime", arg0)
	ret0, _ := ret[0].(phase0.Slot)
	return ret0
}

// EstimatedSlotAtTime indicates an expected call of EstimatedSlotAtTime.
func (mr *MockNetworkMockRecorder) EstimatedSlotAtTime(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EstimatedSlotAtTime", reflect.TypeOf((*MockNetwork)(nil).EstimatedSlotAtTime), arg0)
}

// EstimatedSyncCommitteePeriodAtEpoch mocks base method.
func (m *MockNetwork) EstimatedSyncCommitteePeriodAtEpoch(epoch phase0.Epoch) uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EstimatedSyncCommitteePeriodAtEpoch", epoch)
	ret0, _ := ret[0].(uint64)
	return ret0
}

// EstimatedSyncCommitteePeriodAtEpoch indicates an expected call of EstimatedSyncCommitteePeriodAtEpoch.
func (mr *MockNetworkMockRecorder) EstimatedSyncCommitteePeriodAtEpoch(epoch any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EstimatedSyncCommitteePeriodAtEpoch", reflect.TypeOf((*MockNetwork)(nil).EstimatedSyncCommitteePeriodAtEpoch), epoch)
}

// EstimatedTimeAtSlot mocks base method.
func (m *MockNetwork) EstimatedTimeAtSlot(slot phase0.Slot) time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EstimatedTimeAtSlot", slot)
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// EstimatedTimeAtSlot indicates an expected call of EstimatedTimeAtSlot.
func (mr *MockNetworkMockRecorder) EstimatedTimeAtSlot(slot any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EstimatedTimeAtSlot", reflect.TypeOf((*MockNetwork)(nil).EstimatedTimeAtSlot), slot)
}

// FirstEpochOfSyncPeriod mocks base method.
func (m *MockNetwork) FirstEpochOfSyncPeriod(period uint64) phase0.Epoch {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FirstEpochOfSyncPeriod", period)
	ret0, _ := ret[0].(phase0.Epoch)
	return ret0
}

// FirstEpochOfSyncPeriod indicates an expected call of FirstEpochOfSyncPeriod.
func (mr *MockNetworkMockRecorder) FirstEpochOfSyncPeriod(period any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FirstEpochOfSyncPeriod", reflect.TypeOf((*MockNetwork)(nil).FirstEpochOfSyncPeriod), period)
}

// FirstSlotAtEpoch mocks base method.
func (m *MockNetwork) FirstSlotAtEpoch(epoch phase0.Epoch) phase0.Slot {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FirstSlotAtEpoch", epoch)
	ret0, _ := ret[0].(phase0.Slot)
	return ret0
}

// FirstSlotAtEpoch indicates an expected call of FirstSlotAtEpoch.
func (mr *MockNetworkMockRecorder) FirstSlotAtEpoch(epoch any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FirstSlotAtEpoch", reflect.TypeOf((*MockNetwork)(nil).FirstSlotAtEpoch), epoch)
}

// ForkAtEpoch mocks base method.
func (m *MockNetwork) ForkAtEpoch(epoch phase0.Epoch) (spec.DataVersion, *phase0.Fork) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ForkAtEpoch", epoch)
	ret0, _ := ret[0].(spec.DataVersion)
	ret1, _ := ret[1].(*phase0.Fork)
	return ret0, ret1
}

// ForkAtEpoch indicates an expected call of ForkAtEpoch.
func (mr *MockNetworkMockRecorder) ForkAtEpoch(epoch any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ForkAtEpoch", reflect.TypeOf((*MockNetwork)(nil).ForkAtEpoch), epoch)
}

// GetDomainType mocks base method.
func (m *MockNetwork) GetDomainType() types.DomainType {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDomainType")
	ret0, _ := ret[0].(types.DomainType)
	return ret0
}

// GetDomainType indicates an expected call of GetDomainType.
func (mr *MockNetworkMockRecorder) GetDomainType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDomainType", reflect.TypeOf((*MockNetwork)(nil).GetDomainType))
}

// GetEpochFirstSlot mocks base method.
func (m *MockNetwork) GetEpochFirstSlot(epoch phase0.Epoch) phase0.Slot {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEpochFirstSlot", epoch)
	ret0, _ := ret[0].(phase0.Slot)
	return ret0
}

// GetEpochFirstSlot indicates an expected call of GetEpochFirstSlot.
func (mr *MockNetworkMockRecorder) GetEpochFirstSlot(epoch any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEpochFirstSlot", reflect.TypeOf((*MockNetwork)(nil).GetEpochFirstSlot), epoch)
}

// GetEpochsPerSyncCommitteePeriod mocks base method.
func (m *MockNetwork) GetEpochsPerSyncCommitteePeriod() uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEpochsPerSyncCommitteePeriod")
	ret0, _ := ret[0].(uint64)
	return ret0
}

// GetEpochsPerSyncCommitteePeriod indicates an expected call of GetEpochsPerSyncCommitteePeriod.
func (mr *MockNetworkMockRecorder) GetEpochsPerSyncCommitteePeriod() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEpochsPerSyncCommitteePeriod", reflect.TypeOf((*MockNetwork)(nil).GetEpochsPerSyncCommitteePeriod))
}

// GetGenesisTime mocks base method.
func (m *MockNetwork) GetGenesisTime() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGenesisTime")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetGenesisTime indicates an expected call of GetGenesisTime.
func (mr *MockNetworkMockRecorder) GetGenesisTime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGenesisTime", reflect.TypeOf((*MockNetwork)(nil).GetGenesisTime))
}

// GetGenesisValidatorsRoot mocks base method.
func (m *MockNetwork) GetGenesisValidatorsRoot() phase0.Root {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGenesisValidatorsRoot")
	ret0, _ := ret[0].(phase0.Root)
	return ret0
}

// GetGenesisValidatorsRoot indicates an expected call of GetGenesisValidatorsRoot.
func (mr *MockNetworkMockRecorder) GetGenesisValidatorsRoot() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGenesisValidatorsRoot", reflect.TypeOf((*MockNetwork)(nil).GetGenesisValidatorsRoot))
}

// GetNetworkName mocks base method.
func (m *MockNetwork) GetNetworkName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetNetworkName indicates an expected call of GetNetworkName.
func (mr *MockNetworkMockRecorder) GetNetworkName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkName", reflect.TypeOf((*MockNetwork)(nil).GetNetworkName))
}

// GetSlotDuration mocks base method.
func (m *MockNetwork) GetSlotDuration() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSlotDuration")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetSlotDuration indicates an expected call of GetSlotDuration.
func (mr *MockNetworkMockRecorder) GetSlotDuration() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSlotDuration", reflect.TypeOf((*MockNetwork)(nil).GetSlotDuration))
}

// GetSlotEndTime mocks base method.
func (m *MockNetwork) GetSlotEndTime(slot phase0.Slot) time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSlotEndTime", slot)
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetSlotEndTime indicates an expected call of GetSlotEndTime.
func (mr *MockNetworkMockRecorder) GetSlotEndTime(slot any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSlotEndTime", reflect.TypeOf((*MockNetwork)(nil).GetSlotEndTime), slot)
}

// GetSlotStartTime mocks base method.
func (m *MockNetwork) GetSlotStartTime(slot phase0.Slot) time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSlotStartTime", slot)
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetSlotStartTime indicates an expected call of GetSlotStartTime.
func (mr *MockNetworkMockRecorder) GetSlotStartTime(slot any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSlotStartTime", reflect.TypeOf((*MockNetwork)(nil).GetSlotStartTime), slot)
}

// GetSlotsPerEpoch mocks base method.
func (m *MockNetwork) GetSlotsPerEpoch() uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSlotsPerEpoch")
	ret0, _ := ret[0].(uint64)
	return ret0
}

// GetSlotsPerEpoch indicates an expected call of GetSlotsPerEpoch.
func (mr *MockNetworkMockRecorder) GetSlotsPerEpoch() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSlotsPerEpoch", reflect.TypeOf((*MockNetwork)(nil).GetSlotsPerEpoch))
}

// GetSyncCommitteeSize mocks base method.
func (m *MockNetwork) GetSyncCommitteeSize() uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSyncCommitteeSize")
	ret0, _ := ret[0].(uint64)
	return ret0
}

// GetSyncCommitteeSize indicates an expected call of GetSyncCommitteeSize.
func (mr *MockNetworkMockRecorder) GetSyncCommitteeSize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSyncCommitteeSize", reflect.TypeOf((*MockNetwork)(nil).GetSyncCommitteeSize))
}

// IntervalDuration mocks base method.
func (m *MockNetwork) IntervalDuration() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IntervalDuration")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// IntervalDuration indicates an expected call of IntervalDuration.
func (mr *MockNetworkMockRecorder) IntervalDuration() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IntervalDuration", reflect.TypeOf((*MockNetwork)(nil).IntervalDuration))
}

// IsFirstSlotOfEpoch mocks base method.
func (m *MockNetwork) IsFirstSlotOfEpoch(slot phase0.Slot) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsFirstSlotOfEpoch", slot)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsFirstSlotOfEpoch indicates an expected call of IsFirstSlotOfEpoch.
func (mr *MockNetworkMockRecorder) IsFirstSlotOfEpoch(slot any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsFirstSlotOfEpoch", reflect.TypeOf((*MockNetwork)(nil).IsFirstSlotOfEpoch), slot)
}

// LastSlotOfSyncPeriod mocks base method.
func (m *MockNetwork) LastSlotOfSyncPeriod(period uint64) phase0.Slot {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LastSlotOfSyncPeriod", period)
	ret0, _ := ret[0].(phase0.Slot)
	return ret0
}

// LastSlotOfSyncPeriod indicates an expected call of LastSlotOfSyncPeriod.
func (mr *MockNetworkMockRecorder) LastSlotOfSyncPeriod(period any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LastSlotOfSyncPeriod", reflect.TypeOf((*MockNetwork)(nil).LastSlotOfSyncPeriod), period)
}

// NetworkName mocks base method.
func (m *MockNetwork) NetworkName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NetworkName")
	ret0, _ := ret[0].(string)
	return ret0
}

// NetworkName indicates an expected call of NetworkName.
func (mr *MockNetworkMockRecorder) NetworkName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NetworkName", reflect.TypeOf((*MockNetwork)(nil).NetworkName))
}
