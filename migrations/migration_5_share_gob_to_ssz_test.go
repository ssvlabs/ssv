package migrations

import (
	"encoding/hex"
	"testing"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ssvlabs/ssv-spec/types"
	"github.com/stretchr/testify/require"

	"github.com/ssvlabs/ssv/protocol/v2/blockchain/beacon"
)

func TestMigration5_shareGOB_Decode(t *testing.T) {
	t.Run("own share (has share pubkey)", func(t *testing.T) {
		shareGOBHexString := "327f0301010c73746f72616765536861726501ff800001020105536861726501ff820001084d6574616461746101ff8c000000ffa8ff8103010105536861726501ff82000109010a4f70657261746f724944010600010f56616c696461746f725075624b6579010a00010b53686172655075624b6579010a000109436f6d6d697474656501ff8600010651756f72756d010600010d5061727469616c51756f72756d010600010a446f6d61696e5479706501ff88000113466565526563697069656e744164647265737301ff8a0001084772616666697469010a00000029ff850201011a5b5d2a73746f726167652e73746f726167654f70657261746f7201ff860001ff84000026ff83030102ff84000102010a4f70657261746f72494401060001065075624b6579010a0000001aff870101010a446f6d61696e5479706501ff880001060108000019ff89010101095b32305d75696e743801ff8a000106012800004bff8b030101084d6574616461746101ff8c000103010e426561636f6e4d6574616461746101ff8e00010c4f776e65724164647265737301ff9000010a4c697175696461746564010200000054ff8d0301011156616c696461746f724d6574616461746101ff8e000104010742616c616e636501060001065374617475730104000105496e646578010600010f41637469766174696f6e45706f6368010600000017ff8f010101074164647265737301ff9000010601280000fe01a5ff8001023083cfeef36e9f114f2432b39ff3f47f8b15d39074a96960377b3b0e5f0e422099ee54a4eddaf8815c8fe2dab89528c86e01308f5f803c3531ca8eebb62cf858c228a8729d568bafc9e07d797d6c83368474f5c2170f653891aad55fda74a825e5d1e4010401fe01130130a754fefa9bf4b967d9581ac7a9476dc65a806e42573c6322ad9eb90e3527fc1634afebeb3f7532d7c80b84794b2992bd0001fe011401308f5f803c3531ca8eebb62cf858c228a8729d568bafc9e07d797d6c83368474f5c2170f653891aad55fda74a825e5d1e40001fe01150130b1d28fc4c98309e8249bb1bfb737ccd7e4a8996ce692958e848aa7d0ee41ffacc562c5b9ce869d6f3b69d72a1b44408e0001fe0116013097e9bd027e9769a34fb730fff5cba87823508267b33aa843f44b450ace06f0e9a5aaedf4ddab255737e1e84b7bb8fd4a00010301020104000031130114ffd1ffdcff86ff9556fff1fff3027dffef02ff9d23ffcd0968ffcf08ffcb0e00010101fb0787e5aef0010601fd19a5c401feb8ab0001145cffc0ffddffe14e7256340cffc820415a6022ffa7ffd1ffc93a350000"
		shareGOBHex, err := hex.DecodeString(shareGOBHexString)
		require.NoError(t, err)
		shareGOBGot := &storageShareGOB{}
		err = shareGOBGot.Decode(shareGOBHex)
		require.NoError(t, err)

		shareGOBWant := &storageShareGOB{
			Share: Share{
				OperatorID:          0,
				ValidatorPubKey:     []uint8{131, 207, 238, 243, 110, 159, 17, 79, 36, 50, 179, 159, 243, 244, 127, 139, 21, 211, 144, 116, 169, 105, 96, 55, 123, 59, 14, 95, 14, 66, 32, 153, 238, 84, 164, 237, 218, 248, 129, 92, 143, 226, 218, 184, 149, 40, 200, 110},
				SharePubKey:         []uint8{143, 95, 128, 60, 53, 49, 202, 142, 235, 182, 44, 248, 88, 194, 40, 168, 114, 157, 86, 139, 175, 201, 224, 125, 121, 125, 108, 131, 54, 132, 116, 245, 194, 23, 15, 101, 56, 145, 170, 213, 95, 218, 116, 168, 37, 229, 209, 228},
				Committee:           []*storageOperatorGOB{{OperatorID: 275, PubKey: []uint8{167, 84, 254, 250, 155, 244, 185, 103, 217, 88, 26, 199, 169, 71, 109, 198, 90, 128, 110, 66, 87, 60, 99, 34, 173, 158, 185, 14, 53, 39, 252, 22, 52, 175, 235, 235, 63, 117, 50, 215, 200, 11, 132, 121, 75, 41, 146, 189}}, {OperatorID: 276, PubKey: []uint8{143, 95, 128, 60, 53, 49, 202, 142, 235, 182, 44, 248, 88, 194, 40, 168, 114, 157, 86, 139, 175, 201, 224, 125, 121, 125, 108, 131, 54, 132, 116, 245, 194, 23, 15, 101, 56, 145, 170, 213, 95, 218, 116, 168, 37, 229, 209, 228}}, {OperatorID: 277, PubKey: []uint8{177, 210, 143, 196, 201, 131, 9, 232, 36, 155, 177, 191, 183, 55, 204, 215, 228, 168, 153, 108, 230, 146, 149, 142, 132, 138, 167, 208, 238, 65, 255, 172, 197, 98, 197, 185, 206, 134, 157, 111, 59, 105, 215, 42, 27, 68, 64, 142}}, {OperatorID: 278, PubKey: []uint8{151, 233, 189, 2, 126, 151, 105, 163, 79, 183, 48, 255, 245, 203, 168, 120, 35, 80, 130, 103, 179, 58, 168, 67, 244, 75, 69, 10, 206, 6, 240, 233, 165, 170, 237, 244, 221, 171, 37, 87, 55, 225, 232, 75, 123, 184, 253, 74}}},
				Quorum:              3,
				PartialQuorum:       2,
				DomainType:          types.DomainType{0, 0, 49, 19},
				FeeRecipientAddress: [20]uint8{209, 220, 134, 149, 86, 241, 243, 2, 125, 239, 2, 157, 35, 205, 9, 104, 207, 8, 203, 14},
				Graffiti:            nil,
			},
			Metadata: Metadata{
				BeaconMetadata: &beacon.ValidatorMetadata{
					Balance:         32344747760,
					Status:          3,
					Index:           1680836,
					ActivationEpoch: 47275,
				},
				OwnerAddress: common.Address{92, 192, 221, 225, 78, 114, 86, 52, 12, 200, 32, 65, 90, 96, 34, 167, 209, 201, 58, 53},
				Liquidated:   false,
			},
		}

		require.Equal(t, shareGOBWant, shareGOBGot)
	})

	t.Run("foreign share (has no share pubkey)", func(t *testing.T) {
		shareGOBHexString := "327f0301010c73746f72616765536861726501ff800001020105536861726501ff820001084d6574616461746101ff8c000000ffa8ff8103010105536861726501ff82000109010a4f70657261746f724944010600010f56616c696461746f725075624b6579010a00010b53686172655075624b6579010a000109436f6d6d697474656501ff8600010651756f72756d010600010d5061727469616c51756f72756d010600010a446f6d61696e5479706501ff88000113466565526563697069656e744164647265737301ff8a0001084772616666697469010a00000029ff850201011a5b5d2a73746f726167652e73746f726167654f70657261746f7201ff860001ff84000026ff83030102ff84000102010a4f70657261746f72494401060001065075624b6579010a0000001aff870101010a446f6d61696e5479706501ff880001060108000019ff89010101095b32305d75696e743801ff8a000106012800004bff8b030101084d6574616461746101ff8c000103010e426561636f6e4d6574616461746101ff8e00010c4f776e65724164647265737301ff9000010a4c697175696461746564010200000054ff8d0301011156616c696461746f724d6574616461746101ff8e000104010742616c616e636501060001065374617475730104000105496e646578010600010f41637469766174696f6e45706f6368010600000017ff8f010101074164647265737301ff9000010601280000fe0168ff80010230a275c23faa6712fee6f3194beb88893434239c7b09fe1b2e1a089b0845f2065cf8c60b2676bd433c189711d875e24def020401fe013f0130896eafb3c583425ec55b4628a597389e077637ab59a70a2b25da49ab9df121ee0783d761299a6a341b98295cde37cdce0001fe01400130824625a74f4edf11b93045d4c04f8ceebae79a90d544c4b5588b10344f5b6810897e978977f7994b299db856eccf3f1e0001fe01410130a686dac51fe5660c6743f026b5894bbc4d6dd0d3a87274303f6eb10a0c182bd1d77d2fcd3e52eb74d62edffb0f897d940001fe01420130b32a19368e26f6ff21a645939a5d380d8138fb3726701f70e0124d22c68347d1d8aa5beccbbfa622946a5ea74eb4ccf100010301020104000031130114000000000000000000000000000000000000000000010101fb0783439663010601fd1973b601feb2690001145cffc0ffddffe14e7256340cffc820415a6022ffa7ffd1ffc93a350000"
		shareGOBHex, err := hex.DecodeString(shareGOBHexString)
		require.NoError(t, err)
		shareGOBGot := &storageShareGOB{}
		err = shareGOBGot.Decode(shareGOBHex)
		require.NoError(t, err)

		shareGOBWant := &storageShareGOB{
			Share: Share{
				OperatorID:          0,
				ValidatorPubKey:     []uint8{162, 117, 194, 63, 170, 103, 18, 254, 230, 243, 25, 75, 235, 136, 137, 52, 52, 35, 156, 123, 9, 254, 27, 46, 26, 8, 155, 8, 69, 242, 6, 92, 248, 198, 11, 38, 118, 189, 67, 60, 24, 151, 17, 216, 117, 226, 77, 239},
				SharePubKey:         nil,
				Committee:           []*storageOperatorGOB{{OperatorID: 319, PubKey: []uint8{137, 110, 175, 179, 197, 131, 66, 94, 197, 91, 70, 40, 165, 151, 56, 158, 7, 118, 55, 171, 89, 167, 10, 43, 37, 218, 73, 171, 157, 241, 33, 238, 7, 131, 215, 97, 41, 154, 106, 52, 27, 152, 41, 92, 222, 55, 205, 206}}, {OperatorID: 320, PubKey: []uint8{130, 70, 37, 167, 79, 78, 223, 17, 185, 48, 69, 212, 192, 79, 140, 238, 186, 231, 154, 144, 213, 68, 196, 181, 88, 139, 16, 52, 79, 91, 104, 16, 137, 126, 151, 137, 119, 247, 153, 75, 41, 157, 184, 86, 236, 207, 63, 30}}, {OperatorID: 321, PubKey: []uint8{166, 134, 218, 197, 31, 229, 102, 12, 103, 67, 240, 38, 181, 137, 75, 188, 77, 109, 208, 211, 168, 114, 116, 48, 63, 110, 177, 10, 12, 24, 43, 209, 215, 125, 47, 205, 62, 82, 235, 116, 214, 46, 223, 251, 15, 137, 125, 148}}, {OperatorID: 322, PubKey: []uint8{179, 42, 25, 54, 142, 38, 246, 255, 33, 166, 69, 147, 154, 93, 56, 13, 129, 56, 251, 55, 38, 112, 31, 112, 224, 18, 77, 34, 198, 131, 71, 209, 216, 170, 91, 236, 203, 191, 166, 34, 148, 106, 94, 167, 78, 180, 204, 241}}},
				Quorum:              3,
				PartialQuorum:       2,
				DomainType:          types.DomainType{0, 0, 49, 19},
				FeeRecipientAddress: [20]uint8{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
				Graffiti:            nil,
			},
			Metadata: Metadata{
				BeaconMetadata: &beacon.ValidatorMetadata{
					Balance:         32267015779,
					Status:          3,
					Index:           1668022,
					ActivationEpoch: 45673,
				},
				OwnerAddress: common.Address{92, 192, 221, 225, 78, 114, 86, 52, 12, 200, 32, 65, 90, 96, 34, 167, 209, 201, 58, 53},
				Liquidated:   false,
			},
		}

		require.Equal(t, shareGOBWant, shareGOBGot)
	})
}
